[build-system]
requires = ["maturin>=1,<2"]
build-backend = "maturin"

[project]
name = "temporal-cache"
authors = [{name = "the temporal-cache authors", email = "3105306+timkpaine@users.noreply.github.com"}]
description="Time based function caching"
readme = "README.md"
license = { text = "Apache-2.0" }
version = "0.1.5"
requires-python = ">=3.9"
keywords = []

classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "frozendict>1.2",
    "pytz",
    "tzlocal>=2.0.0",
]

[project.urls]
Repository = "https://github.com/timkpaine/temporal-cache"
Homepage = "https://github.com/timkpaine/temporal-cache"

[project.optional-dependencies]
develop = [
    "build",
    "bump-my-version",
    "check-manifest",
    "cibuildwheel",
    "maturin>=1,<2",
    "pytest",
    "pytest-cov",
    "ruff",
    "twine",
    "wheel",
]

[project.scripts]

[tool.bumpversion]
current_version = "0.1.5"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "temporal_cache/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "Cargo.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "rust/Cargo.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[tool.check-manifest]
ignore = [
    ".copier-answers.yml",
    "Makefile",
    "setup.py",
    "docs/**/*",
    "rust/.config/*",
    "rust/Cargo.lock",
    "rust/README.md",
]

[tool.cibuildwheel]
before-build = "rustup show"
build = "cp39-*"
skip = "*musllinux*"
test-command = "pytest -vvv {project}/temporal_cache/tests"
test-requires = ["pytest", "pytest-cov", "pytest-sugar", "pytest-xdist"]

[tool.cibuildwheel.linux]
before-build = "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y && rustup show"
environment = {PATH="$HOME/.cargo/bin:$PATH", CARGO_TERM_COLOR="always"}
archs = "x86_64"

[tool.cibuildwheel.macos]
archs = "x86_64 arm64"
environment = {MACOS_DEPLOYMENT_TARGET=11.0}

[tool.cibuildwheel.windows]
environment = {PATH="$UserProfile\\.cargo\bin;$PATH"}
archs = "AMD64 x86"

[tool.coverage.run]
branch = true
omit = [
    "temporal_cache/tests/integration/",
]
[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
fail_under = 50

[tool.pytest.ini_options]
addopts = ["-vvv", "--junitxml=junit.xml"]
asyncio_mode = "strict"
testpaths = "temporal_cache/tests"

[tool.ruff]
line-length = 150

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.isort]
combine-as-imports = true
default-section = "third-party"
known-first-party = ["temporal_cache"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
